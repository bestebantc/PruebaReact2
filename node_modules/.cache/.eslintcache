[{"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\index.js":"1","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\App.js":"2","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\reportWebVitals.js":"3","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\aws-exports.js":"4","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\route\\Router.js":"5","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Home.js":"6","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\SignUp.js":"7","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\OurTeam.js":"8","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\LoggedHome.js":"9","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Login.js":"10","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\ErrorPage.js":"11","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\MakaiMap.js":"12","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\CodeVerification.js":"13","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Test.js":"14","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Gallery.js":"15","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\queries.js":"16","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\subscriptions.js":"17","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\LoggedNavBar\\index.js":"18","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\NavBar\\index.js":"19","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\Footer\\index.js":"20"},{"size":552,"mtime":1680231078245,"results":"21","hashOfConfig":"22"},{"size":330,"mtime":1677627645599,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1676240860740,"results":"24","hashOfConfig":"22"},{"size":1198,"mtime":1681582552024,"results":"25","hashOfConfig":"22"},{"size":2864,"mtime":1680236812305,"results":"26","hashOfConfig":"22"},{"size":5815,"mtime":1681600733738,"results":"27","hashOfConfig":"22"},{"size":4069,"mtime":1677347989727,"results":"28","hashOfConfig":"22"},{"size":14878,"mtime":1681604424208,"results":"29","hashOfConfig":"22"},{"size":11316,"mtime":1681600752295,"results":"30","hashOfConfig":"22"},{"size":3080,"mtime":1677642890973,"results":"31","hashOfConfig":"22"},{"size":105,"mtime":1677347989707,"results":"32","hashOfConfig":"22"},{"size":1866,"mtime":1681344252104,"results":"33","hashOfConfig":"22"},{"size":2047,"mtime":1677347989706,"results":"34","hashOfConfig":"22"},{"size":160,"mtime":1677633429822,"results":"35","hashOfConfig":"22"},{"size":5648,"mtime":1681603857577,"results":"36","hashOfConfig":"22"},{"size":634,"mtime":1681348735615,"results":"37","hashOfConfig":"22"},{"size":838,"mtime":1681348802322,"results":"38","hashOfConfig":"22"},{"size":1246,"mtime":1681601673251,"results":"39","hashOfConfig":"22"},{"size":1148,"mtime":1681600733733,"results":"40","hashOfConfig":"22"},{"size":637,"mtime":1677347989688,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1b0z5mu",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"45"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\index.js",[],[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\App.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\reportWebVitals.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\aws-exports.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\route\\Router.js",["107","108"],[],"import { useEffect, useState, React } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport OurTeam from \"../pages/OurTeam\";\r\nimport Gallery from \"../pages/Gallery\";\r\nimport Login from \"../pages/Login\";\r\nimport SignUp from \"../pages/SignUp\";\r\nimport CodeVerification from \"../pages/CodeVerification\";\r\nimport ErrorPage from \"../pages/ErrorPage\";\r\nimport Test from \"../pages/Test\";\r\n\r\nimport LoggedHome from \"../pages/LoggedHome\";\r\nimport MakaiMap from \"../pages/MakaiMap\";\r\n\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nconst Router = () => {\r\n    const [user,setUser] = useState(undefined);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const checkUser = async () => {\r\n        setLoading(true)\r\n        try{\r\n            const authUser = await Auth.currentAuthenticatedUser({bypassCache: true})\r\n            console.log(authUser)\r\n            //console.log('authUser',authUser.attributes)\r\n            //console.log('authUser',authUser)\r\n            setUser(authUser)\r\n            //console.log('log 1')\r\n        }catch (err){\r\n            //console.log('log 3')\r\n            setUser(undefined);\r\n        }\r\n        console.log('user',user)\r\n        setLoading(false)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(user !== undefined){\r\n            checkUser();\r\n        }\r\n        //console.log('useEffect1')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const listener = (data) => {\r\n            //console.log('from navigation')\r\n            //console.log(data)\r\n            if(data.payload.event === 'signIn' || data.payload.event === 'signOut'){\r\n                checkUser();\r\n            }\r\n        }\r\n        Hub.listen('auth', listener);\r\n        return () => Hub.remove('auth', listener);\r\n    }, []);\r\n\r\n\r\n    if (loading === true){\r\n        return(\r\n            <div>Loading papu</div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <BrowserRouter>\r\n            {user ? (\r\n                <Routes>\r\n                    <Route path=\"/home\" element={<LoggedHome/>}/>\r\n                    <Route path=\"/map\" element={<MakaiMap/>}/>\r\n                    <Route path=\"*\" element={<ErrorPage/>}/>\r\n                </Routes>\r\n            ) : (\r\n                <Routes>\r\n\r\n                    <Route path=\"/\" element={<Home/>}/>\r\n                    <Route path=\"team\" element={<OurTeam/>}/>\r\n                    <Route path=\"gallery\" element={<Gallery/>}/>\r\n                    <Route path=\"login\" element={<Login/>}/>\r\n                    <Route path=\"signup\" element={<SignUp/>}/>\r\n                    <Route path=\"codev\" element={<CodeVerification/>}/>\r\n                    <Route path=\"Tesst\" element={<Test/>}/>\r\n                    <Route path=\"*\" element={<ErrorPage/>}/>\r\n                </Routes> \r\n            )}\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Home.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\SignUp.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\OurTeam.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\LoggedHome.js",["109","110","111","112","113","114","115","116","117","118","119","120","121"],[],"import { LoggedNavBar } from \"../components/LoggedNavBar\";\r\nimport '../styles/LoggedHome.css'\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\nimport { useEffect, useState, React } from \"react\";\r\nimport * as subscriptions from '../graphql/subscriptions';\r\nimport {listTodos} from '../graphql/queries';\r\nimport GaugeChart from 'react-gauge-chart'\r\nimport { color } from 'd3-color';\r\nimport { interpolateRgb } from 'd3-interpolate';\r\nimport ReactDOM from 'react-dom';\r\nimport LiquidFillGauge from 'react-liquid-gauge';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport { Card, CardContent, CardActions } from \"@mui/material\";\r\n\r\n\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n  } from \"recharts\";\r\n\r\nconst LoggedHome = () => {\r\n  const [data, setData] = useState([])\r\n  const [number, setNumber] = useState(undefined)\r\n  const [number2, setNumber2] = useState(undefined)\r\n  const [sensor2, setSensor2] = useState(0.0)\r\n  const [number3, setNumber3] = useState(undefined)\r\n  const [sensor3, setSensor3] = useState(0)\r\n  const [sensor1, setSensor1] = useState([\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n  ])\r\n\r\n  const status = {\r\n      \"status\": \"\"\r\n  }\r\n  const radius = 150;\r\n  const interpolate = interpolateRgb('#6495ed','#dc143c');\r\n  const fillColor = interpolate(50 / 100);\r\n\r\n  const gradientStops = [\r\n    {\r\n      key: '0%',\r\n      stopColor: color(fillColor).darker(0.5).toString(),\r\n      stopOpacity: 1,\r\n      offset: '0%'\r\n    },\r\n    {\r\n      key: '50%',\r\n      stopColor: fillColor,\r\n      stopOpacity: 0.75,\r\n      offset: '50%'\r\n    },\r\n    {\r\n      key: '100%',\r\n      stopColor: color(fillColor).brighter(0.5).toString(),\r\n      stopOpacity: 0.5,\r\n      offset: '100%'\r\n    }\r\n  ];\r\n  const datosgraficaprueba = [\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[0],\r\n      pv: sensor1[1],\r\n      amt: 2400\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[1],\r\n      pv: sensor1[1],\r\n      amt: 2210\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[2],\r\n      pv: sensor1[1],\r\n      amt: 2290\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[3],\r\n      pv: sensor1[1],\r\n      amt: 2000\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[4],\r\n      pv: sensor1[1],\r\n      amt: 2181\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[5],\r\n      pv: sensor1[1],\r\n      amt: 2500\r\n    },\r\n    {\r\n      name: \"-\",\r\n      Distancia: sensor1[6],\r\n      pv: sensor1[1],\r\n      amt: 2100\r\n    }\r\n  ];    \r\n    useEffect(()=>{\r\n        listSensorData();\r\n\r\n    },[])\r\n    const listSensorData = async () => {\r\n        try{\r\n            const response = await API.graphql(graphqlOperation(listTodos));\r\n            const todoList = response.data.listTodos.items;\r\n            console.log('list data:', todoList)\r\n            setData(response.data.listTodos.items)\r\n        }catch(e){\r\n            console.log('error:',e)\r\n    }}\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriber = API.graphql(graphqlOperation(subscriptions.onCreateTodo, {status : status})).subscribe({\r\n            next: (response) => {\r\n                console.log(response.value)\r\n                console.log(\"se recibieron datos\")\r\n                  setSensor2(response.value.data.onCreateTodo.s1/100) //VELOCIDAD 0-100 s1\r\n                  setSensor3(response.value.data.onCreateTodo.s2) //PORCENTAJE BATERIA\r\n                  setSensor1((prevState) => {\r\n                    const newArray = Array.from(prevState);  // CREATING A NEW ARRAY OBJECT\r\n                    newArray.shift();\r\n                    newArray.push(response.value.data.onCreateTodo.s3);\r\n                    return newArray;  \r\n                  });\r\n                  // s3: response.value.data.onCreateTodo.s3,\r\n                  // s4: response.value.data.onCreateTodo.s4,\r\n                  // s5: response.value.data.onCreateTodo.s5,\r\n                    \r\n                // });\r\n              \r\n            },\r\n            error: (error) => {\r\n              console.log('error on sensor subscription', error);\r\n            }\r\n        });\r\n        return () => {\r\n            console.log('terminating subscription to sensor');\r\n            subscriber.unsubscribe();\r\n        }\r\n    }, [data]);\r\n\r\n  console.log(\"distancia\",data.distance)\r\n  const changeSensor1Value = () => {\r\n    setSensor1((prevState) => {\r\n      const newArray = Array.from(prevState);  // CREATING A NEW ARRAY OBJECT\r\n      newArray.shift();\r\n      newArray.push(number);\r\n      return newArray;  \r\n    });\r\n  }\r\n  const changeSensor2Value = () => {\r\n    setSensor2(number2/100);\r\n  }\r\n  const changeSensor3Value = () => {\r\n    setSensor3(number3);\r\n  }\r\n  return(\r\n    <div className=\"page\">\r\n      <LoggedNavBar/>\r\n      <div style={{width: '100%'}}>\r\n        <div className=\"graphsContainer\">\r\n          <div className=\"graphs\">\r\n            <Card className=\"cardStyle\">\r\n              <CardContent>\r\n                <LineChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={datosgraficaprueba}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 80,\r\n                        left: 0,\r\n                        bottom: 5\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {/* <Line\r\n                      type=\"monotone\"\r\n                      dataKey=\"pv\"\r\n                      stroke=\"#8884d8\"\r\n                      activeDot={{ r: 8 }}\r\n                    /> */}\r\n                    <Line type=\"monotone\" dataKey=\"Distancia\" stroke=\"#82ca9d\" />\r\n                  </LineChart>\r\n              </CardContent>\r\n              <CardActions>\r\n                <div style={{width: \"100%\", display: \"flex\", justifyContent:'center'}}>\r\n                  <a> Distancia a Basura (m)</a>\r\n                  {/* <input placeholder=\"set number\" type=\"text\" pattern=\"[0-9]*\" onChange={(e)=>{setNumber(e.target.value)}}/> */}\r\n                  {/* <button onClick={changeSensor1Value}>button sensor1</button> */}\r\n                </div>\r\n              </CardActions>\r\n            </Card>\r\n          </div>\r\n          <div className=\"graphs\">\r\n            <Card className=\"cardStyle\">\r\n              <CardContent>\r\n                <GaugeChart id=\"gauge-chart2\" \r\n                  style={{\"width\": '100%'}}\r\n                  nrOfLevels={20} \r\n                  percent={sensor2} \r\n                  textColor=\"black\"\r\n                  needleColor=\"gray\"\r\n                  formatTextValue={value => value + ' m/s'}\r\n                  animDelay={0}\r\n                  arcsLength={[0.4, 0.45, 0.15]}\r\n                  colors={['#5BE12C', '#F5CD19', '#EA4228']}\r\n                  arcPadding={0.01}\r\n                />\r\n              </CardContent>\r\n              <CardActions>\r\n                <div style={{width: \"100%\", display: \"flex\", justifyContent:'center'}}>\r\n                  <a> Velocidad</a>\r\n                  {/* <input placeholder=\"set number (0-100)\" type=\"text\" onChange={(e)=>{setNumber2(e.target.value)}}/> */}\r\n                  {/* <button onClick={changeSensor2Value} style={{textAlign: 'center'}}>button sensor2</button> */}\r\n                </div>\r\n              </CardActions>\r\n            </Card>\r\n          </div>    \r\n          <div className=\"graphs\">\r\n            <Card className=\"cardStyle\">\r\n              <CardContent>\r\n                <LiquidFillGauge\r\n                style={{ margin: '0 auto' }}\r\n                width={radius * 2}\r\n                height={radius * 2}\r\n                value={Number(sensor3)}\r\n                percent=\"%\"\r\n                textSize={1}\r\n                textOffsetX={0}\r\n                textOffsetY={0}\r\n                textRenderer={(props) => {\r\n                    const value = Math.round(props.value);\r\n                    const radius = Math.min(props.height / 2, props.width / 2);\r\n                    const textPixels = (props.textSize * radius / 2);\r\n                    const valueStyle = {\r\n                        fontSize: textPixels\r\n                    };\r\n                    const percentStyle = {\r\n                        fontSize: textPixels * 0.6\r\n                    };\r\n\r\n                    return (\r\n                        <tspan>\r\n                            <tspan className=\"value\" style={valueStyle}>{value}</tspan>\r\n                            <tspan style={percentStyle}>{props.percent}</tspan>\r\n                        </tspan>\r\n                    );\r\n                }}\r\n                riseAnimation\r\n                waveAnimation\r\n                waveFrequency={2}\r\n                waveAmplitude={1}\r\n                gradient\r\n                gradientStops={gradientStops}\r\n                circleStyle={{\r\n                    fill: fillColor\r\n                }}\r\n                waveStyle={{\r\n                    fill: fillColor\r\n                }}\r\n                textStyle={{\r\n                    fill: color('#444').toString(),\r\n                    fontFamily: 'Arial'\r\n                }}\r\n                waveTextStyle={{\r\n                    fill: color('#fff').toString(),\r\n                    fontFamily: 'Arial'\r\n                }}\r\n                />\r\n              </CardContent>\r\n              <CardActions>\r\n                <div style={{width: \"100%\", display: \"flex\", justifyContent:'center'}}>\r\n                  <a> Voltaje</a>\r\n                  {/* <input placeholder=\"set number (0-100)\" type=\"text\" onChange={(e)=>{setNumber3(e.target.value)}}/> */}\r\n                  {/* <button onClick={changeSensor3Value}>button sensor3</button> */}\r\n                </div>\r\n              </CardActions>\r\n            </Card>\r\n          </div>    \r\n        </div>\r\n\r\n      {/* <div className=\"loggedContent\" >\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            This is an error alert — check it out!\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"warning\">\r\n            This is a warning alert — check it out!\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"info\">\r\n            This is an info alert — check it out!\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            This is a success alert — check it out!\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n\r\n      <div className=\"loggedContent\" >\r\n          PayLoadRecibida:\r\n          {data.map(function(item, i){\r\n          return <li key={i}>{item.distance} {item.status}</li>\r\n          })}\r\n          \r\n          {data.map(objetoa => {\r\n          //    return <li key={i}>Test</li>\r\n          //   const payload = atob(objetoa.payload_raw);\r\n          //   const date = new Date(objetoa.time * 1); // Multiplica por 1000 para obtener la fecha en milisegundos\r\n          //   const formattedDate = date.toLocaleString()\r\n            return <div key={}> {objetoa.distance} {objetoa.status}</div>\r\n          })}\r\n      </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoggedHome;","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Login.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\ErrorPage.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\MakaiMap.js",["122","123","124"],[],"        import { LoggedNavBar } from \"../components/LoggedNavBar\";\r\n        import \"../styles/Logged.css\";\r\n        import { useEffect, useState, React, useRef} from \"react\";\r\n        import { Wrapper, Status } from \"@googlemaps/react-wrapper\";\r\n\r\n        const MakaiMap = () => {\r\n            const center = { lat: 4.68360892669428, lng: -74.04250725972547 };\r\n            const zoom = 16; \r\n            function MyMapComponent({\r\n                center,\r\n                zoom,\r\n            }) {\r\n                const ref = useRef();\r\n            \r\n                useEffect(() => {\r\n                const map = new window.google.maps.Map(ref.current, {\r\n                    center,\r\n                    zoom,\r\n                });\r\n                const marker =new window.google.maps.Marker({\r\n                    position: center,\r\n                    map: map,\r\n                  });\r\n                });\r\n                \r\n                return <div ref={ref} id=\"map\" />;\r\n            }\r\n            \r\n            const Map = () => {};\r\n            const ref = useRef(null);\r\n            const [map, setMap] = useState();\r\n\r\n            useEffect(() => {\r\n            if (ref.current && !map) {\r\n                setMap(new window.google.maps.Map(ref.current, {}));\r\n            }\r\n            }, [ref, map]);\r\n            \r\n            const render = (status) => {\r\n                return <h1>{status}</h1>;\r\n            };\r\n\r\n            return (    \r\n                <div className=\"page\">\r\n                <LoggedNavBar />\r\n                <Wrapper apiKey={'AIzaSyDZJ-g6n17oxIbVM4B8a5MwI2664VChozA'} render={render}>\r\n                    <MyMapComponent center={center} zoom={zoom} />\r\n                </Wrapper>\r\n                My Makai Map\r\n                <></>\r\n                </div>\r\n            );\r\n        };\r\n\r\n        export default MakaiMap;\r\n","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\CodeVerification.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Test.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Gallery.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\queries.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\subscriptions.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\LoggedNavBar\\index.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\NavBar\\index.js",["125"],[],"import React from \"react\";\r\nimport './styles.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n    return(\r\n        <div className=\"navContainer\">\r\n            <div className=\"navTitle\">\r\n                {/* <NavLink to={'/'} style={{color: 'white', textDecoration: 'none', fontSize: 58, fontFamily: 'fantasy'}}>MAKAI RANGER</NavLink> */}\r\n                <NavLink to={'/'} style={{color: 'white', textDecoration: 'none', paddingLeft: '2%'}}>\r\n                    <img src={require('../../assets/images/Logo3.png')} className=\"navImage\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"navOptions\">\r\n                <NavLink to={'/team'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Nuestro Equipo</NavLink>\r\n                <NavLink to={'/gallery'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Galería</NavLink>\r\n                <NavLink to={'/login'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\Footer\\index.js",[],[],{"ruleId":"126","severity":1,"message":"127","line":43,"column":8,"nodeType":"128","endLine":43,"endColumn":10,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":55,"column":8,"nodeType":"128","endLine":55,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":13},{"ruleId":"132","severity":1,"message":"137","line":13,"column":8,"nodeType":"134","messageId":"135","endLine":13,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":29,"column":18,"nodeType":"134","messageId":"135","endLine":29,"endColumn":27},{"ruleId":"132","severity":1,"message":"139","line":30,"column":19,"nodeType":"134","messageId":"135","endLine":30,"endColumn":29},{"ruleId":"132","severity":1,"message":"140","line":32,"column":19,"nodeType":"134","messageId":"135","endLine":32,"endColumn":29},{"ruleId":"126","severity":1,"message":"141","line":158,"column":8,"nodeType":"128","endLine":158,"endColumn":14,"suggestions":"142"},{"ruleId":"132","severity":1,"message":"143","line":161,"column":9,"nodeType":"134","messageId":"135","endLine":161,"endColumn":27},{"ruleId":"132","severity":1,"message":"144","line":169,"column":9,"nodeType":"134","messageId":"135","endLine":169,"endColumn":27},{"ruleId":"132","severity":1,"message":"145","line":172,"column":9,"nodeType":"134","messageId":"135","endLine":172,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":210,"column":19,"nodeType":"148","endLine":210,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":235,"column":19,"nodeType":"148","endLine":235,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":296,"column":19,"nodeType":"148","endLine":296,"endColumn":22},{"ruleId":"132","severity":1,"message":"149","line":4,"column":27,"nodeType":"134","messageId":"135","endLine":4,"endColumn":33},{"ruleId":"132","severity":1,"message":"150","line":20,"column":23,"nodeType":"134","messageId":"135","endLine":20,"endColumn":29},{"ruleId":"132","severity":1,"message":"151","line":29,"column":19,"nodeType":"134","messageId":"135","endLine":29,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":11,"column":21,"nodeType":"148","endLine":11,"endColumn":95},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUser' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["154"],"React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.",["155"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Stack' is defined but never used.","'setNumber' is assigned a value but never used.","'setNumber2' is assigned a value but never used.","'setNumber3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["156"],"'changeSensor1Value' is assigned a value but never used.","'changeSensor2Value' is assigned a value but never used.","'changeSensor3Value' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Status' is defined but never used.","'marker' is assigned a value but never used.","'Map' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [checkUser, user]",{"range":"163","text":"164"},"Update the dependencies array to be: [checkUser]",{"range":"165","text":"166"},"Update the dependencies array to be: [data, status]",{"range":"167","text":"168"},[1397,1399],"[checkUser, user]",[1785,1787],"[checkUser]",[4322,4328],"[data, status]"]