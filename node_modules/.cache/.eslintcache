[{"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\index.js":"1","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\App.js":"2","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\reportWebVitals.js":"3","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\aws-exports.js":"4","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\route\\Router.js":"5","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Home.js":"6","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Login.js":"7","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\OurTeam.js":"8","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\CodeVerification.js":"9","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Gallery.js":"10","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\SignUp.js":"11","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\ErrorPage.js":"12","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\LoggedNavBar\\index.js":"13","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\NavBar\\index.js":"14","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\Footer\\index.js":"15","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\test.js":"16","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Test.js":"17","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\queries.js":"18","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\LoggedHome.js":"19","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\subscriptions.js":"20"},{"size":552,"mtime":1676240860724,"results":"21","hashOfConfig":"22"},{"size":330,"mtime":1677627645599,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1676240860740,"results":"24","hashOfConfig":"22"},{"size":1198,"mtime":1679779713833,"results":"25","hashOfConfig":"22"},{"size":2706,"mtime":1677642753227,"results":"26","hashOfConfig":"22"},{"size":5958,"mtime":1678045885625,"results":"27","hashOfConfig":"22"},{"size":3080,"mtime":1677642890973,"results":"28","hashOfConfig":"22"},{"size":14510,"mtime":1679870596056,"results":"29","hashOfConfig":"22"},{"size":2047,"mtime":1677347989706,"results":"30","hashOfConfig":"22"},{"size":2252,"mtime":1678050879820,"results":"31","hashOfConfig":"22"},{"size":4069,"mtime":1677347989727,"results":"32","hashOfConfig":"22"},{"size":105,"mtime":1677347989707,"results":"33","hashOfConfig":"22"},{"size":1064,"mtime":1677440726475,"results":"34","hashOfConfig":"22"},{"size":1139,"mtime":1677812455220,"results":"35","hashOfConfig":"22"},{"size":637,"mtime":1677347989688,"results":"36","hashOfConfig":"22"},{"size":154,"mtime":1677513136707,"results":"37","hashOfConfig":"22"},{"size":160,"mtime":1677633429822,"results":"38","hashOfConfig":"22"},{"size":594,"mtime":1679030708926,"results":"39","hashOfConfig":"22"},{"size":5286,"mtime":1679030412980,"results":"40","hashOfConfig":"22"},{"size":787,"mtime":1679030708976,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1b0z5mu",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"45"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\index.js",[],[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\App.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\reportWebVitals.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\aws-exports.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\route\\Router.js",["106","107","108","109","110"],[],"import { useEffect, useState, React } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport OurTeam from \"../pages/OurTeam\";\r\nimport Gallery from \"../pages/Gallery\";\r\nimport Login from \"../pages/Login\";\r\nimport SignUp from \"../pages/SignUp\";\r\nimport CodeVerification from \"../pages/CodeVerification\";\r\nimport LoggedHome from \"../pages/LoggedHome\";\r\nimport ErrorPage from \"../pages/ErrorPage\";\r\nimport Test from \"../pages/Test\";\r\n\r\n\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nconst Router = () => {\r\n    const [user,setUser] = useState(undefined);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const checkUser = async () => {\r\n        setLoading(true)\r\n        try{\r\n            const authUser = await Auth.currentAuthenticatedUser({bypassCache: true})\r\n            console.log(authUser)\r\n            //console.log('authUser',authUser.attributes)\r\n            //console.log('authUser',authUser)\r\n            setUser(authUser)\r\n            //console.log('log 1')\r\n        }catch (err){\r\n            //console.log('log 3')\r\n            setUser(undefined);\r\n        }\r\n        console.log('user',user)\r\n        setLoading(false)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        //console.log('useEffect1')\r\n        checkUser();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const listener = (data) => {\r\n            //console.log('from navigation')\r\n            //console.log(data)\r\n            if(data.payload.event == 'signIn' || data.payload.event == 'signOut'){\r\n                checkUser();\r\n            }\r\n        }\r\n        Hub.listen('auth', listener);\r\n        return () => Hub.remove('auth', listener);\r\n    }, []);\r\n\r\n\r\n    if (loading == true){\r\n        return(\r\n            <div>Loading papu</div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <BrowserRouter>\r\n            {user ? (\r\n                <Routes>\r\n                    <Route path=\"/home\" element={<LoggedHome/>}/>\r\n                    <Route path=\"*\" element={<ErrorPage/>}/>\r\n                </Routes>\r\n            ) : (\r\n                <Routes>\r\n\r\n                    <Route path=\"/\" element={<Home/>}/>\r\n                    <Route path=\"team\" element={<OurTeam/>}/>\r\n                    <Route path=\"gallery\" element={<Gallery/>}/>\r\n                    <Route path=\"login\" element={<Login/>}/>\r\n                    <Route path=\"signup\" element={<SignUp/>}/>\r\n                    <Route path=\"codev\" element={<CodeVerification/>}/>\r\n                    <Route path=\"Tesst\" element={<Test/>}/>\r\n                    <Route path=\"*\" element={<ErrorPage/>}/>\r\n                </Routes> \r\n            )}\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Home.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Login.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\OurTeam.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\CodeVerification.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Gallery.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\SignUp.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\ErrorPage.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\LoggedNavBar\\index.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\NavBar\\index.js",["111"],[],"import React from \"react\";\r\nimport './styles.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n    return(\r\n        <div className=\"navContainer\">\r\n            <div className=\"navTitle\">\r\n                {/* <NavLink to={'/'} style={{color: 'white', textDecoration: 'none', fontSize: 58, fontFamily: 'fantasy'}}>MAKAI RANGER</NavLink> */}\r\n                <NavLink to={'/'} style={{color: 'white', textDecoration: 'none', paddingLeft: '2%'}}>\r\n                    <img src={require('../../assets/images/Logo3.png')} width=\"600\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"navOptions\">\r\n                <NavLink to={'/team'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Nuestro Equipo</NavLink>\r\n                <NavLink to={'/gallery'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Galería</NavLink>\r\n                <NavLink to={'/login'} style={{color: 'white', textDecoration: 'none', fontSize: 30, fontFamily: 'fantasy'}}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\components\\Footer\\index.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\test.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\Test.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\queries.js",[],[],"D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\pages\\LoggedHome.js",["112","113"],[],"import { LoggedNavBar } from \"../components/LoggedNavBar\";\r\nimport '../styles/Logged.css'\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\nimport { useEffect, useState, React } from \"react\";\r\nimport * as subscriptions from '../graphql/subscriptions';\r\nimport {listTodos} from '../graphql/queries';\r\nimport GaugeChart from 'react-gauge-chart'\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n  } from \"recharts\";\r\n\r\nconst LoggedHome = () => {\r\n    const datosgraficaprueba = [\r\n        {\r\n          name: \"Page A\",\r\n          uv: 4000,\r\n          pv: 2400,\r\n          amt: 2400\r\n        },\r\n        {\r\n          name: \"Page B\",\r\n          uv: 3000,\r\n          pv: 1398,\r\n          amt: 2210\r\n        },\r\n        {\r\n          name: \"Page C\",\r\n          uv: 2000,\r\n          pv: 9800,\r\n          amt: 2290\r\n        },\r\n        {\r\n          name: \"Page D\",\r\n          uv: 2780,\r\n          pv: 3908,\r\n          amt: 2000\r\n        },\r\n        {\r\n          name: \"Page E\",\r\n          uv: 1890,\r\n          pv: 4800,\r\n          amt: 2181\r\n        },\r\n        {\r\n          name: \"Page F\",\r\n          uv: 2390,\r\n          pv: 3800,\r\n          amt: 2500\r\n        },\r\n        {\r\n          name: \"Page G\",\r\n          uv: 3490,\r\n          pv: 4300,\r\n          amt: 2100\r\n        }\r\n      ];\r\n    const [data, setData] = useState([])\r\n    ////\r\n\r\n\r\n    /// \r\n    const status = {\r\n        \"status\": \"\"\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        listSensorData();\r\n\r\n    },[])\r\n    const listSensorData = async () => {\r\n        try{\r\n            const response = await API.graphql(graphqlOperation(listTodos));\r\n            const todoList = response.data.listTodos.items;\r\n            console.log('list data:', todoList)\r\n            setData(response.data.listTodos.items)\r\n        }catch(e){\r\n            console.log('error:',e)\r\n    }}\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriber = API.graphql(graphqlOperation(subscriptions.onCreateTodo, {status : status})).subscribe({\r\n            next: (response) => {\r\n                console.log(response.value)\r\n                console.log(\"se recibieron datos\")\r\n\r\n                    setData((prevState) => {\r\n                    const newArray = Array.from(prevState);  // CREATING A NEW ARRAY OBJECT\r\n                    newArray.push({\r\n                        distance: response.value.data.onCreateTodo.distance,\r\n                        status: response.value.data.onCreateTodo.status\r\n                    });\r\n                    return newArray;  \r\n                });\r\n              \r\n            },\r\n            error: (error) => {\r\n              console.log('error on sensor subscription', error);\r\n            }\r\n        });\r\n        return () => {\r\n            console.log('terminating subscription to sensor');\r\n            subscriber.unsubscribe();\r\n        }\r\n    console.log(\"se termina suscripcion\")\r\n    }, [data]);\r\n\r\n    \r\n    console.log(\"distancia\",data.distance)\r\n    \r\n    return(\r\n\r\n        <div className=\"page\">\r\n            <LoggedNavBar/>\r\n            <div className=\"loggedContainer\">\r\n                <div className=\"loggedContainer2\">\r\n                    <div className=\"title\">Bienvenido!</div>\r\n                    <div className=\"loggedContent\" >\r\n                    <LineChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={datosgraficaprueba}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line\r\n                        type=\"monotone\"\r\n                        dataKey=\"pv\"\r\n                        stroke=\"#8884d8\"\r\n                        activeDot={{ r: 8 }}\r\n                    />\r\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n\r\n                    <GaugeChart id=\"gauge-chart2\" \r\n                        style={{\"width\": '30%'}}\r\n                        nrOfLevels={20} \r\n                        percent={0.495} \r\n                    />\r\n                        PayLoadRecibida:\r\n                        {data.map(function(item, i){\r\n                        return <li key={i}>{item.distance} {item.status}</li>\r\n                        })}\r\n                        \r\n                        {/* {data.map(objetoa => {\r\n                        //    return <li key={i}>Test</li>\r\n                        //   const payload = atob(objetoa.payload_raw);\r\n                        //   const date = new Date(objetoa.time * 1); // Multiplica por 1000 para obtener la fecha en milisegundos\r\n                        //   const formattedDate = date.toLocaleString()\r\n                          return <div key={}> {objetoa.distance} {objetoa.status}</div>\r\n                        })} */}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoggedHome;","D:\\Escritorio\\ProyectoTIRepositoryClon\\PruebaReact2\\src\\graphql\\subscriptions.js",[],[],{"ruleId":"114","severity":1,"message":"115","line":40,"column":8,"nodeType":"116","endLine":40,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":46,"column":35,"nodeType":"120","messageId":"121","endLine":46,"endColumn":37},{"ruleId":"118","severity":1,"message":"119","line":46,"column":69,"nodeType":"120","messageId":"121","endLine":46,"endColumn":71},{"ruleId":"114","severity":1,"message":"115","line":52,"column":8,"nodeType":"116","endLine":52,"endColumn":10,"suggestions":"122"},{"ruleId":"118","severity":1,"message":"119","line":55,"column":17,"nodeType":"120","messageId":"121","endLine":55,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":11,"column":21,"nodeType":"125","endLine":11,"endColumn":86},{"ruleId":"126","severity":1,"message":"127","line":111,"column":5,"nodeType":"128","messageId":"129","endLine":111,"endColumn":42},{"ruleId":"114","severity":1,"message":"130","line":112,"column":8,"nodeType":"116","endLine":112,"endColumn":14,"suggestions":"131"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["133"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["134"],{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [checkUser]",{"range":"140","text":"141"},{"range":"142","text":"141"},"Update the dependencies array to be: [data, status]",{"range":"143","text":"144"},[1306,1308],"[checkUser]",[1692,1694],[2926,2932],"[data, status]"]